Depois de termos consolidado as Estruturas Sequenciais e de Decisão, vamos, durante esta semana, (aulas da 30 à 40, de 50 horas previstas para este módulo) fazer a consolidação de Estruturas de REPETIÇÃO.

Estou muito satisfeito com a vossa evolução.
Pedido: Tentem não copiar nada. Tentem até à “última” fazer sozinhos, senão a probabilidade de virem a ter a autonomia a codificar ir-se-á tornar baixa com o passar do tempo, e ninguém quer isso. Se virem que não conseguem, então pesquisem na “net” e se encontrarem algum programa parecido NÃO COPIEM. METAM de quem é e ALTEREM.

######################################################################################
########### NOTA MUITO IMPORTANTE - LEIAM A LINHA EM BAIXO. REQUISITO OBRIGATÓRIO ##############
######################################################################################

      ESTRUTURAS DE REPETIÇÃO - OS ALUNOS DEVEM OBRIGATORIAMENTE USAR as estruturas WHILE e FOR
      A palavra OBRIGATORIAMENTE implica que NÃO PODEM FAZER NENHUM programa SEM USAR UMA DELAS

######################################################################################
########### NOTA MUITO IMPORTANTE - LEIAM A LINHA EM CIMA. REQUISITO OBRIGATÓRIO ##############
######################################################################################

1.	Façam um programa que peça uma nota, entre zero e dez. Mostrem uma mensagem caso o valor seja inválido e continuem a pedir até que o utilizador insira um valor válido.

2.	Façam um programa que leia um nome de utilizador e respectiva password e que não aceite a password igual ao nome do utilizador, mostrando uma mensagem de erro e voltando a pedir as informações.

3.	Façam um programa que leia e valide as seguintes informações:
a.	Nome: maior que 3 caracteres;
b.	Idade: entre 0 e 150;
c.	Salário: maior que zero;
d.	Sexo: 'f' ou 'm';
e.	Estado Civil: 's', 'c', 'v', 'd'; - solteiro, casado, viúvo e divorciado

4.	Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%, façam um programa que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento.

5.	Alterem o programa anterior permitindo ao utilizador entrar com “input” as populações e as taxas de crescimento iniciais. Validem a entrada de forma a que permita repetir a operação.

6.	Façam um programa que imprima no ecrã os números de 1 a 20, por baixo uns dos outros. Depois modifiquem o programa para que ele mostrem os números ao lado uns dos outros.

7.	Façam um programa que leia 5 números e nos diga o maior número.

8.	Façam um programa que leia 5 números e diga a soma e a média dos números.

9.	Façam um programa que imprima no ecrã apenas os números ímpares entre 1 e 50.

10.	Façam um programa que receba dois números inteiros e gere os números inteiros que estão no intervalo compreendido por eles.

11.	Alterem o programa anterior para mostrar no final a soma dos números.

12.	Desenvolvam um gerador de tabuada, capaz de gerar a tabuada de qualquer número inteiro entre 1 a 10. O utilizador deve dizer de que número ele deseja ver a tabuada. A saída deve ser conforme o exemplo abaixo:
a.	Tabuada dos 5:
b.	5 X 1 = 5
c.	5 X 2 = 10
d.	...
e.	5 X 10 = 50

13.	Façam um programa que peça dois números, base e expoente, calcule e mostre o primeiro número elevado ao segundo número. NOTA: Não utilizem a função de potência da linguagem Pyhton.

14.	Façam um programa que peça 10 números inteiros, calcule e mostre a quantidade de números pares e a quantidade de números ímpares.

15.	A série de Fibonacci é formada pela sequência 1,1,2,3,5,8,13,21,34,55,... Façam um programa capaz de gerar essa sequência para um determinado número de números.

16.	A série de Fibonacci é formada pela sequência 0,1,1,2,3,5,8,13,21,34,55,... Façam um programa que gere a série até que o valor seja maior que 500.

17.	Façam um programa que calcule o fatorial de um número inteiro fornecido pelo utilizador. Ex.: 5!=5.4.3.2.1=120

18.	Façam um programa que, dado um conjunto de N números (números quaiquer), determine o menor valor, o maior valor e a soma dos valores.

19.	Alterem o programa anterior para que ele aceite apenas números entre 0 e 1000.



NOTA:: O aluno deverá pesquisar na internet os conceitos ou formúlas matemáticas de suporte (Factorial, Série de Fibonacci, etc...)
BOM TRABALHO
